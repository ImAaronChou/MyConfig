
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 用户自定义配置（该文件放一般性配置，可覆盖~/.vimrc里的配置，若要增加、卸载插件，请放入~/.vimrc.custom.plugins）
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 开启相对行号
" set relativenumber  

" 开启鼠标
" set mouse=a

" 设置光标所在列高亮
" set cursorcolumn

" indentLine 开启代码对齐线
" let g:indentLine_enabled = 1

" markdown
" let system = system('uname -s')
" if system == "Darwin\n"
"     let g:mkdp_path_to_chrome = "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome"
" else
"     let g:mkdp_path_to_chrome = '/usr/bin/google-chrome-stable %U'
" endif
" nmap <silent> <F7> <Plug>MarkdownPreview
" imap <silent> <F7> <Plug>MarkdownPreview
" nmap <silent> <F8> <Plug>StopMarkdownPreview
" imap <silent> <F8> <Plug>StopMarkdownPreview

" Doxygen
" let g:DoxygenToolkit_authorName="chxuan, 787280310@qq.com"
" let s:licenseTag = "Copyright(C)\<enter>"
" let s:licenseTag = s:licenseTag . "For free\<enter>"
" let s:licenseTag = s:licenseTag . "All right reserved\<enter>"
" let g:DoxygenToolkit_licenseTag = s:licenseTag
" let g:DoxygenToolkit_briefTag_funcName="yes"
" let g:doxygen_enhanced_color=1
" let g:DoxygenToolkit_commentType="Qt"

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 通用设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 插件设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:ycm_log_level='debug'

"Buffer Controller 的相关消除Bug指令
augroup bufferignore
  autocmd!
  autocmd FileType qf set nobuflisted
augroup END

au BufNewFile,BufRead *.j2 set ft=jinja


"设置NerdTree使用的git版本
let g:NERDTreeGitStatusPorcelainVersion = 1

"自定义airline格式
let g:airline#extensions#default#layout = [ [ 'a', 'x'], [ 'c','z', 'error', 'warning' ] ]

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 快捷键设置
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Buffer Controller
nnoremap <S-H>     :BPrev<CR>
nnoremap <S-L>     :BNext<CR>
nnoremap <S-Q>     :Bclose<CR>

" nerdtree
nnoremap <silent> <c-n> :NERDTreeToggle<cr>
set splitright
set splitbelow

"vim-fswitch
nmap <silent> <Leader>sw :FSHere<cr>
let g:fsnonewfiles='true' 

" YCM
" 取消vimplus自带的ycm fix映射
unmap <leader>ff

nnoremap <S-F> :YcmCompleter FixIt<cr>
nnoremap <leader>jd :YcmCompleter GoTo<cr>

" LeaderF
nnoremap <c-p> :LeaderfFile .<cr>
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 缓存设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"save undo info
if !isdirectory($HOME."/.vim")
    call mkdir($HOME."/.vim", "", 0770)
endif
if !isdirectory($HOME."/.vim/undo_dir")
    call mkdir($HOME."/.vim/undo_dir", "", 0700)
endif
set undodir=~/.vim/undo_dir
set undofile

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 自动化设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists('s:std_in') | NERDTree | endif

"取消vim自带的\=映射，因为codefmt使用了\=作为快捷键，不提前unmap会产生冲突
unmap \=

call glaive#Install()
Glaive codefmt plugin[mappings]

"写文件自动格式化
"function! Formatonsave()
      ":FormatCode
  "endfunction
  "autocmd BufWritePre *.hpp,*.h,*.cc,*.cpp,*proto call Formatonsave()
