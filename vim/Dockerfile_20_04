FROM ubuntu:20.04

SHELL ["/bin/bash", "-c"]
ENV DEBIAN_FRONTEND=noninteractive

#如果没安装ca证书，会导致github证书不被信任，使用该变量可跳过git的证书验证
ENV GIT_SSL_NO_VERIFY=1

#更新apt源
RUN sed -i "s/archive.ubuntu.com/mirrors.163.com/g" /etc/apt/sources.list && \
    sed -i "s/security.ubuntu.com/mirrors.163.com/g" /etc/apt/sources.list && \
    apt-get update 

#安装vim
RUN apt-get install -q -y --no-install-recommends --fix-missing \
    build-essential \
    libncurses5-dev \
    libgtk2.0-dev \
    libatk1.0-dev \
    libcairo2-dev \
    libx11-dev \
    libxpm-dev \
    libxt-dev \
    python3-dev \ 
    lua5.2 \
    liblua5.2-dev \
    libperl-dev \
    git && \
    git clone https://github.com/ImAaronChou/vim.git && \
    cd vim && \
    git checkout origin/docker_vim && \
    ./configure --with-features=huge \
                  --enable-multibyte \
                  --enable-rubyinterp=yes \ 
                  --enable-python3interp=yes \
                  --with-python3-config-dir=$(python3-config --configdir) \
                  --enable-perlinterp=yes \
                  --enable-luainterp=yes \
                  --enable-gui=gtk2 \ 
                  --enable-cscope \
                  --prefix=/usr/local && \
    make VIMRUNTIMEDIR=/usr/local/share/vim/vim82 -j8 && \
    make install && \ 
    update-alternatives --install /usr/bin/editor editor /usr/local/bin/vim 1 && \
    update-alternatives --set editor /usr/local/bin/vim && \
    update-alternatives --install /usr/bin/vi vi /usr/local/bin/vim 1 && \
    update-alternatives --set vi /usr/local/bin/vim


#需要在.vimrc中加入let g:ycm_clangd_binary_path = "/usr/bin/clangd"
#安装clangd
RUN apt-get install -q -y --no-install-recommends \
    wget \
    unar && \ 
    wget https://github.com/clangd/clangd/releases/download/13.0.0/clangd-linux-13.0.0.zip &&\
    unar clangd-linux-13.0.0.zip && \
    cp -r clangd_13.0.0/bin /usr && \
    cp -r clangd_13.0.0/lib /usr && \
    rm clangd-linux-13.0.0.zip && \
    rm -r clangd_13.0.0

# setup timezone
RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo Asia/Shanghai > /etc/timezone

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

RUN apt-get install -q -y --no-install-recommends sudo

ARG USER=unknow
ARG UID=unknow
ARG GID=unknow
ENV HOME /home/${USER}


RUN mkdir -p /home/${USER} && \
    echo "${USER}:x:${UID}:${GID}::/home/${USER}:/bin/bash" >> /etc/passwd && \
    echo "${USER}:x:${GID}:" >> /etc/group && \
    mkdir -p /etc/sudoers.d && \
    echo "${USER} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${USER} && \
    chmod 0440 /etc/sudoers.d/${USER} && \
    chown ${UID}:${GID} -R ${HOME} && \
    echo "${USER}:${USER}" | chpasswd && \
    echo "export DISPLAY=:0" >> /etc/profile 

USER ${USER}

#下载Ycm
RUN sudo apt-get install -q -y --no-install-recommends \
    git &&\
    git clone https://github.com/ImAaronChou/YouCompleteMe.git ~/.vim/plugged/YouCompleteMe &&\
    cd ~/.vim/plugged/YouCompleteMe &&\
    git submodule update --init --recursive 

#编译ycm_core
RUN sudo apt-get install -q -y --no-install-recommends \
    cmake \
    python3-dev && \
    cd ~/.vim/plugged/YouCompleteMe &&\
    mkdir ycm_build && \
    cd ycm_build && \
    cmake \
    #cmake -G "Unix Makefiles" -DPATH_TO_LLVM_ROOT=/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04 . ~/.vim/plugged/YouCompleteMe/third_party/ycmd/cpp && \
    -G "Unix Makefiles" . ~/.vim/plugged/YouCompleteMe/third_party/ycmd/cpp && \
    cmake --build . --target ycm_core

#编译ycm watchdog
RUN cd ~/.vim/plugged/YouCompleteMe/third_party/ycmd/third_party/watchdog_deps/watchdog/ &&\ 
    mkdir -p build/lib3 &&\
    cp -r src/watchdog build/lib3 

#安装vim plus
RUN sudo apt-get install -q -y --no-install-recommends \
    git && \
    git clone https://github.com/ImAaronChou/vimplus.git ~/vimplus && \
    #拷贝基本文件
    ln -s ~/vimplus/.ycm_extra_conf.py ~/.ycm_extra_conf.py && \
    ln -s ~/vimplus/colors ~/.vim/colors && \
    ln -s ~/vimplus/ftplugin ~/.vim/ftplugin && \
    ln -s ~/vimplus/autoload ~/.vim/autoload && \
    mkdir -p ~/.local/share/fonts && \
    rm -rf ~/.local/share/fonts/Droid\ Sans\ Mono\ Nerd\ Font\ Complete.otf && \
    cp ~/vimplus/fonts/Droid\ Sans\ Mono\ Nerd\ Font\ Complete.otf ~/.local/share/fonts && \ 
    fc-cache -vf ~/.local/share/fonts

##下载clang-format,vim使用codefmt格式化，需要依赖系统的，或者是单独下载的clang-format可执行文件
#clang-format可使用apt-get或在github上下载，clang-format的二进制文件在llvm包内而不在clang包内，注意！！！
#RUN apt-get install -q -y --no-install-recommends \
    #wget &&\
    #wget https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/llvm-13.0.0.src.tar.xz
    #tar -xvf llvm-13.0.0.src.tar.xz 
RUN sudo apt-get install -q -y --no-install-recommends \
    clang-format

#触发每次构建都重新安装插件
ARG REBUILD_VAR=unknow
RUN sudo apt-get install -q -y --no-install-recommends \
    wget &&\
    wget https://github.com/ImAaronChou/MyConfig/raw/ubuntu/vim/.vimrc -O ~/.vimrc && \
    wget https://github.com/ImAaronChou/MyConfig/raw/ubuntu/vim/.vimrc.custom.config -O ~/.vimrc.custom.config && \
    wget https://github.com/ImAaronChou/MyConfig/raw/ubuntu/vim/.vimrc.custom.plugins -O  ~/.vimrc.custom.plugins && \
    vim -E -s -u "~/.vimrc" +PlugInstall +qa; exit 0
#安装插件，由于vim执行该命令会固定返回1，所以强制返回0使该命令成功

