#!/usr/bin/env python
import os
import re
import time
import threading
import signal
import sys
import logging
from pathlib import Path

log = logging.getLogger("tail_log")
log.setLevel(logging.DEBUG)

handler = logging.StreamHandler(sys.stdout)
handler.setLevel(logging.DEBUG)
formatter = logging.Formatter('[%(asctime)s][%(name)s][%(levelname)s]: %(message)s')
handler.setFormatter(formatter)
log.addHandler(handler)

def getAllLogFilesName(log_path):
    log_files = []
    for root, dirs, files in os.walk(log_path):
        for file_name in files:
           if not re.match(".*\.log\.[0-9]*", file_name): 
               continue
           log_files.append(os.path.join(root, file_name))
    return list(set(log_files))

def outputLog(log_path):
    cmd = "tail -n 300  --follow=name " + log_path +  " >> " +  re.search(".*\.log", log_path).group()

    log.info(cmd)
    os.system(cmd) 

    log.info(log_path + "Stop tail.")

if __name__ == '__main__':
    log_files = []
    while True:
        files = getAllLogFilesName("/home/aaron/logs")

        new_files = list(set(files).difference(set(log_files)))
        log_files = files

        for path in new_files:
            threading.Thread(target=outputLog,args=(path,)).start()
        time.sleep(0.5)

    

